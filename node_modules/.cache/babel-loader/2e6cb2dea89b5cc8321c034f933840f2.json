{"ast":null,"code":"const apiKey = '5db45dd2';\nconst OMDB = {\n  searchOMDB(term) {\n    return fetch(`http://www.omdbapi.com/?s=${term}&plot=full&apikey=${apiKey}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw new Error('Request failed!');\n    }, networkError => {\n      console.log(networkError.message);\n    }).then(jsonResponse => {\n      return jsonResponse.Search.map(film => {\n        return {\n          id: film.imdbID,\n          title: film.Title,\n          year: film.Year,\n          //runtime     : film.Runtime,\n          //releaseDay  : film.Released,\n          genres: film.Type,\n          imgSrc: film.Poster //description : film.Plot,\n          //rating      : film.imdbRating\n\n        };\n      });\n    });\n  }\n\n};\nexport default OMDB;","map":{"version":3,"sources":["/home/mrzero/Documents/Code/React_Projects/filmsearcher/src/util/OMDB.js"],"names":["apiKey","OMDB","searchOMDB","term","fetch","then","response","ok","json","Error","networkError","console","log","message","jsonResponse","Search","map","film","id","imdbID","title","Title","year","Year","genres","Type","imgSrc","Poster"],"mappings":"AAAA,MAAMA,MAAM,GAAG,UAAf;AAEA,MAAMC,IAAI,GAAG;AACTC,EAAAA,UAAU,CAACC,IAAD,EAAM;AACZ,WAAOC,KAAK,CAAE,6BAA4BD,IAAK,qBAAoBH,MAAO,EAA9D,CAAL,CAAsEK,IAAtE,CAA2EC,QAAQ,IAAI;AAC1F,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AACX,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH;;AACD,YAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACH,KALM,EAKJC,YAAY,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,OAAzB;AACH,KAPM,EAOJR,IAPI,CAOCS,YAAY,IAAI;AACpB,aAAOA,YAAY,CAACC,MAAb,CAAoBC,GAApB,CAAwBC,IAAI,IAAI;AAC/B,eAAM;AACFC,UAAAA,EAAE,EAAYD,IAAI,CAACE,MADjB;AAEFC,UAAAA,KAAK,EAASH,IAAI,CAACI,KAFjB;AAGFC,UAAAA,IAAI,EAAUL,IAAI,CAACM,IAHjB;AAIF;AACA;AACAC,UAAAA,MAAM,EAAQP,IAAI,CAACQ,IANjB;AAOFC,UAAAA,MAAM,EAAQT,IAAI,CAACU,MAPjB,CAQF;AACA;;AATE,SAAN;AAWP,OAZM,CAAP;AAaH,KArBM,CAAP;AAsBH;;AAxBQ,CAAb;AA2BA,eAAe1B,IAAf","sourcesContent":["const apiKey = '5db45dd2';\n\nconst OMDB = {\n    searchOMDB(term){\n        return fetch(`http://www.omdbapi.com/?s=${term}&plot=full&apikey=${apiKey}`).then(response => {\n            if(response.ok){\n                return response.json();\n            }\n            throw new Error('Request failed!');\n        }, networkError => {\n            console.log(networkError.message);\n        }).then(jsonResponse => {\n            return jsonResponse.Search.map(film => {\n                    return{\n                        id          : film.imdbID,\n                        title       : film.Title,\n                        year        : film.Year,\n                        //runtime     : film.Runtime,\n                        //releaseDay  : film.Released,\n                        genres      : film.Type,\n                        imgSrc      : film.Poster,\n                        //description : film.Plot,\n                        //rating      : film.imdbRating\n                    };\n            });\n        })\n    }\n}\n\nexport default OMDB;"]},"metadata":{},"sourceType":"module"}